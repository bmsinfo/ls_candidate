# This is a sample build configuration for React using Next.js.
# Check our guides at https://confluence.atlassian.com/x/8YwzDw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:18

pipelines:
  default:
    - step:
        name: Install dependencies
        caches:
          - node
        script:
          - npm install
    - step:
        name: Build production
        caches:
          - node
        script:
          - ls -la
          - npm run build
          - ls -la
          - ls -la \.next
          - apt-get update && apt-get install -y zip
          - ls -la
          - zip -r out.zip .next public
          - ls -la 
        artifacts:
          - out.zip
    - step:
        name: Deploy to azure webapp
        deployment: production
        script:
          - echo "Deployment step (customize as needed)"
          - apt-get update && apt-get install -y apt-transport-https lsb-release software-properties-common dirmngr
          - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/azure-cli.list
          - curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg
          - apt-get update && apt-get install -y azure-cli
          - az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
          - az webapp deployment source config-zip --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_WEBAPP_NAME --src ./out.zip
          - az webapp config set --name $AZURE_WEBAPP_NAME --resource-group $AZURE_RESOURCE_GROUP --startup-file "npm start"